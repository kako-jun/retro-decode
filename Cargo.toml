[package]
name = "retro-decode"
version = "0.1.0"
edition = "2021"
rust-version = "1.70"
authors = ["kako-jun"]
license = "MIT"
description = "Educational tool for analyzing Japanese retro game image formats - Pixel by pixel, past preserved"
homepage = "https://github.com/your-username/retro-decode"
repository = "https://github.com/your-username/retro-decode"
keywords = ["retro", "games", "image", "decoder", "educational"]
categories = ["multimedia::images", "games", "visualization"]
exclude = ["examples/", "web/", "scripts/"]

[dependencies]
# CLI framework
clap = { version = "4.4", features = ["derive", "color", "suggestions"] }

# File I/O and path handling
tokio = { version = "1.35", features = ["full"] }
async-std = "1.12"

# Image processing
image = "0.24"
imageproc = "0.23"

# Binary data handling
byteorder = "1.5"
bitreader = "0.3"
nom = "7.1"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
bincode = "1.3"
chrono = { version = "0.4", features = ["serde"] }

# Logging
log = "0.4"
env_logger = "0.10"
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# Cross-platform paths
path-absolutize = "3.1"
dunce = "1.0"

# Progress bars for CLI
indicatif = "0.17"

# Multi-language bridge
serde_yaml = "0.9"
toml = "0.8"

# GPU acceleration (optional)
wgpu = { version = "0.19", optional = true }
pollster = { version = "0.3", optional = true }

# Python bridge (optional)
pyo3 = { version = "0.20", optional = true }

# Tauri dependencies (optional)
tauri = { version = "1.5", features = ["api-all"], optional = true }
tauri-build = { version = "1.5", optional = true }

[dev-dependencies]
tempfile = "3.8"
criterion = { version = "0.5", features = ["html_reports"] }
proptest = "1.4"

[features]
default = ["cli"]
cli = []
gui = ["tauri", "tauri-build"]
gpu = ["wgpu", "pollster"]
python-bridge = ["pyo3"]
all = ["gui", "gpu", "python-bridge"]

[[bin]]
name = "retro-decode"
path = "src/main.rs"

[[example]]
name = "transparency_demo"
path = "examples/transparency_demo.rs"

[[example]]
name = "generate_test_assets"
path = "examples/generate_test_assets.rs"

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"
strip = true

[profile.dev]
opt-level = 0
debug = true
overflow-checks = true

# [workspace]
# members = [
#     ".",
# ]

# [[bench]]
# name = "decode_benchmarks"
# harness = false

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
